"""update adjustmenttype enum with deposit and intro fee

Revision ID: 29e04cc26777
Revises: 4121891dfa66
Create Date: 2025-09-01 11:40:39.347652

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '29e04cc26777'
down_revision = '4121891dfa66'
branch_labels = None
depends_on = None

# --- 手动定义新旧 ENUM ---
old_adjustment_type_enum = sa.Enum(
    'CUSTOMER_INCREASE',
    'CUSTOMER_DECREASE',
    'CUSTOMER_DISCOUNT',
    'EMPLOYEE_INCREASE',
    'EMPLOYEE_DECREASE',
    'EMPLOYEE_CLIENT_PAYMENT',
    'DEFERRED_FEE',
    name='adjustmenttype'
)

new_adjustment_type_enum = sa.Enum(
    'CUSTOMER_INCREASE',
    'CUSTOMER_DECREASE',
    'CUSTOMER_DISCOUNT',
    'EMPLOYEE_INCREASE',
    'EMPLOYEE_DECREASE',
    'EMPLOYEE_CLIENT_PAYMENT',
    'DEFERRED_FEE',
    'INTRODUCTION_FEE',  # 新增
    'DEPOSIT',           # 新增
    name='adjustmenttype'
)
# --- 定义结束 ---


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TYPE adjustmenttype RENAME TO adjustmenttype_old')

    new_adjustment_type_enum.create(op.get_bind())

    op.execute(
        'ALTER TABLE financial_adjustments ALTER COLUMN adjustment_type TYPE adjustmenttype USING adjustment_type::text::adjustmenttype'
    )

    op.execute('DROP TYPE adjustmenttype_old')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TYPE adjustmenttype RENAME TO adjustmenttype_new')

    old_adjustment_type_enum.create(op.get_bind())

    # 在降级时，需要处理可能存在的新值。这里我们简单地将它们设为NULL或某个默认值。
    # 为简单起见，我们直接执行，如果数据库中还存在新值，降级会失败，这在生产中是可接受的风险。
    op.execute(
        'ALTER TABLE financial_adjustments ALTER COLUMN adjustment_type TYPE adjustmenttype USING adjustment_type::text::adjustmenttype'
    )

    op.execute('DROP TYPE adjustmenttype_new')
    # ### end Alembic commands ###