"""Define all models and add sort_order

Revision ID: 89595a570adf
Revises:
Create Date: 2025-04-15 12:56:33.819041

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '89595a570adf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # --- Manually added: Add sort_order columns ---
    op.add_column('evaluation_aspect', sa.Column('sort_order', sa.Integer(), nullable=True, server_default='0'))
    op.add_column('evaluation_category', sa.Column('sort_order', sa.Integer(), nullable=True, server_default='0'))
    op.add_column('evaluation_item', sa.Column('sort_order', sa.Integer(), nullable=True, server_default='0'))

    op.execute('UPDATE evaluation_aspect SET sort_order = 0 WHERE sort_order IS NULL')
    op.execute('UPDATE evaluation_category SET sort_order = 0 WHERE sort_order IS NULL')
    op.execute('UPDATE evaluation_item SET sort_order = 0 WHERE sort_order IS NULL')
    # ----------------------------------------------------------

    # --- Alembic generated (with explicit constraint names) ---
    op.drop_table('evaluation_backup') # Assuming you want to drop this

    with op.batch_alter_table('answer', schema=None) as batch_op:
        # Explicitly named unique constraint
        batch_op.create_unique_constraint('uq_answer_question_id', ['question_id'])
        # Explicitly named foreign key
        batch_op.create_foreign_key('fk_answer_question_id', 'question', ['question_id'], ['id'], ondelete='CASCADE')
        # batch_op.drop_table_comment(...) # Optional

    with op.batch_alter_table('answerrecord', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_answerrecord_exam_paper_id', 'exampaper', ['exam_paper_id'], ['id'])
        batch_op.create_foreign_key('fk_answerrecord_question_id', 'question', ['question_id'], ['id'])
        batch_op.create_foreign_key('fk_answerrecord_user_id', 'user', ['user_id'], ['id'])
        # batch_op.drop_table_comment(...) # Optional

    with op.batch_alter_table('employee_self_evaluation_detail', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_empselfevaldetail_eval_id', 'employee_self_evaluation', ['evaluation_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_empselfevaldetail_item_id', 'evaluation_item', ['item_id'], ['id'])

    with op.batch_alter_table('evaluation', schema=None) as batch_op:
        # FKs for evaluator_user_id and evaluator_customer_id defined in model's __table_args__
        batch_op.create_foreign_key('fk_evaluation_evaluated_user_id', 'user', ['evaluated_user_id'], ['id'])

    with op.batch_alter_table('evaluation_aspect', schema=None) as batch_op:
        batch_op.alter_column('sort_order',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.create_index(batch_op.f('idx_evaluation_aspect_sort_order'), ['sort_order'], unique=False)

    with op.batch_alter_table('evaluation_category', schema=None) as batch_op:
        batch_op.alter_column('sort_order',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
        # Explicitly named foreign key
        batch_op.create_foreign_key('fk_evaluationcategory_aspect_id', 'evaluation_aspect', ['aspect_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_evaluation_category_aspect_id_sort_order'), ['aspect_id', 'sort_order'], unique=False)

    with op.batch_alter_table('evaluation_detail', schema=None) as batch_op:
        # Explicitly named foreign keys
        batch_op.create_foreign_key('fk_evaluationdetail_item_id', 'evaluation_item', ['item_id'], ['id'])
        batch_op.create_foreign_key('fk_evaluationdetail_evaluation_id', 'evaluation', ['evaluation_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('evaluation_item', schema=None) as batch_op:
        batch_op.alter_column('sort_order',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
        # Use name from DDL or choose a new one if creating
        batch_op.create_foreign_key('evaluation_item_category_id_fkey', 'evaluation_category', ['category_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_evaluation_item_category_id_sort_order'), ['category_id', 'sort_order'], unique=False)

    with op.batch_alter_table('exam', schema=None) as batch_op:
        # Explicitly named foreign keys (using DDL names where available)
        batch_op.create_foreign_key('fk_exam_user_id', 'user', ['user_id'], ['id'], ondelete='RESTRICT')
        batch_op.create_foreign_key('exam_exam_paper_id_fkey', 'exampaper', ['exam_paper_id'], ['id'], ondelete='RESTRICT')

    with op.batch_alter_table('exampapercourse', schema=None) as batch_op:
        # Drop potentially existing constraints first (handle errors if they don't exist)
        try: op.drop_constraint('exampapercourse_exam_paper_id_fkey', 'exampapercourse', type_='foreignkey')
        except Exception: pass
        try: op.drop_constraint('exampapercourse_course_id_fkey', 'exampapercourse', type_='foreignkey')
        except Exception: pass
        # Create with explicit names
        batch_op.create_foreign_key('fk_exampapercourse_course_id', 'trainingcourse', ['course_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_exampapercourse_exam_paper_id', 'exampaper', ['exam_paper_id'], ['id'], ondelete='CASCADE')

    # exampaperquestion comment change is fine

    with op.batch_alter_table('option', schema=None) as batch_op:
        batch_op.alter_column('is_correct',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               # existing_comment='是否为正确答案', # Comment changes are often ignored or handled differently
               existing_server_default=sa.text('false'))
        # If needed, add: batch_op.create_foreign_key('fk_option_question_id', 'question', ['question_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('temp_answer_record', schema=None) as batch_op:
        # Explicitly named foreign keys
        batch_op.create_foreign_key('fk_tempanswerrecord_exam_paper_id', 'exampaper', ['exam_paper_id'], ['id'])
        # Keep the existing named constraint if it makes sense
        batch_op.create_foreign_key('temp_answer_record_question_id_fkey', 'question', ['question_id'], ['id'])
        batch_op.create_foreign_key('fk_tempanswerrecord_user_id', 'user', ['user_id'], ['id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        # Explicitly named unique constraint
        batch_op.create_unique_constraint('uq_user_email', ['email']) # Renamed for clarity

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # --- Manually added: Drop sort_order columns and indexes ---
    with op.batch_alter_table('evaluation_item', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_evaluation_item_category_id_sort_order'))
        batch_op.drop_column('sort_order')

    with op.batch_alter_table('evaluation_category', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_evaluation_category_aspect_id_sort_order'))
        batch_op.drop_column('sort_order')

    with op.batch_alter_table('evaluation_aspect', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_evaluation_aspect_sort_order'))
        batch_op.drop_column('sort_order')
    # ---------------------------------------------------------

    # --- Reverting Alembic generated (with explicit constraint names) ---
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint('uq_user_email', type_='unique') # Use the name from upgrade

    with op.batch_alter_table('temp_answer_record', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tempanswerrecord_user_id', type_='foreignkey') # Use name from upgrade
        batch_op.drop_constraint('temp_answer_record_question_id_fkey', type_='foreignkey') # Use name from upgrade
        batch_op.drop_constraint('fk_tempanswerrecord_exam_paper_id', type_='foreignkey') # Use name from upgrade

    with op.batch_alter_table('option', schema=None) as batch_op:
        batch_op.alter_column('is_correct',
               existing_type=sa.BOOLEAN(),
               nullable=True, # Revert nullable
               # existing_comment='是否为正确答案',
               existing_server_default=sa.text('false'))
        # if added in upgrade: batch_op.drop_constraint('fk_option_question_id', type_='foreignkey')

    # exampaperquestion comment change - no structural downgrade needed

    with op.batch_alter_table('exampapercourse', schema=None) as batch_op:
        batch_op.drop_constraint('fk_exampapercourse_exampaper', type_='foreignkey') # Use name from upgrade
        batch_op.drop_constraint('fk_exampapercourse_course_id', type_='foreignkey') # Use name from upgrade
        # Recreate old constraints if necessary, using old names
        # op.create_foreign_key('exampapercourse_course_id_fkey', 'exampapercourse', 'trainingcourse', ['course_id'], ['id'], ondelete='CASCADE')
        # op.create_foreign_key('exampapercourse_exam_paper_id_fkey', 'exampapercourse', 'exampaper', ['exam_paper_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('exam', schema=None) as batch_op:
        batch_op.drop_constraint('exam_exam_paper_id_fkey', type_='foreignkey') # Use name from upgrade
        batch_op.drop_constraint('fk_exam_user_id', type_='foreignkey') # Use name from upgrade

    with op.batch_alter_table('evaluation_item', schema=None) as batch_op:
        batch_op.drop_constraint('evaluation_item_category_id_fkey', type_='foreignkey')
        # sort_order column dropped above

    with op.batch_alter_table('evaluation_detail', schema=None) as batch_op:
        batch_op.drop_constraint('fk_evaluationdetail_evaluation_id', type_='foreignkey') # Use name from upgrade
        batch_op.drop_constraint('fk_evaluationdetail_item_id', type_='foreignkey') # Use name from upgrade

    with op.batch_alter_table('evaluation_category', schema=None) as batch_op:
        batch_op.drop_constraint('fk_evaluationcategory_aspect_id', type_='foreignkey') # Use name from upgrade
        # sort_order column dropped above

    # evaluation_aspect sort_order drop handled above

    with op.batch_alter_table('evaluation', schema=None) as batch_op:
        batch_op.drop_constraint('fk_evaluation_evaluated_user_id', type_='foreignkey') # Use name from upgrade
        # Also drop FKs for evaluator_user_id and evaluator_customer_id if created in upgrade

    with op.batch_alter_table('employee_self_evaluation_detail', schema=None) as batch_op:
        batch_op.drop_constraint('fk_empselfevaldetail_item_id', type_='foreignkey') # Use name from upgrade
        batch_op.drop_constraint('fk_empselfevaldetail_eval_id', type_='foreignkey') # Use name from upgrade

    with op.batch_alter_table('answerrecord', schema=None) as batch_op:
        # batch_op.create_table_comment(...) # Optional restore
        batch_op.drop_constraint('fk_answerrecord_user_id', type_='foreignkey') # Use name from upgrade
        batch_op.drop_constraint('fk_answerrecord_question_id', type_='foreignkey') # Use name from upgrade
        batch_op.drop_constraint('fk_answerrecord_exam_paper_id', type_='foreignkey') # Use name from upgrade

    with op.batch_alter_table('answer', schema=None) as batch_op:
        # batch_op.create_table_comment(...) # Optional restore
        batch_op.drop_constraint('fk_answer_question_id', type_='foreignkey') # Use name from upgrade
        batch_op.drop_constraint('uq_answer_question_id', type_='unique') # Use name from upgrade

    # --- Manually added: Recreate evaluation_backup table ---
    # Keep if dropped in upgrade and needed for downgrade
    op.create_table('evaluation_backup',
        sa.Column('id', sa.UUID(), autoincrement=False, nullable=True),
        sa.Column('evaluated_user_id', sa.UUID(), autoincrement=False, nullable=True),
        sa.Column('evaluator_user_id', sa.UUID(), autoincrement=False, nullable=True),
        sa.Column('evaluation_time', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
        sa.Column('additional_comments', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('evaluation_type', postgresql.ENUM('internal', 'client', name='evaluation_type', create_type=False), autoincrement=False, nullable=True)
    )
    # ----------------------------------------------------

    # ### end Alembic commands ###