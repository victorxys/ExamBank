"""Add MonthlyStatement and BankTransaction models and their relationship

Revision ID: a61a151789c9
Revises: 484ea6ba4f2e
Create Date: 2025-09-28 12:45:47.392964

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a61a151789c9'
down_revision = '484ea6ba4f2e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank_transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('transaction_id', sa.String(length=255), nullable=True, comment='交易流水号'),
    sa.Column('transaction_time', sa.DateTime(timezone=True), nullable=False, comment='交易时间'),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False, comment='交易金额'),
    sa.Column('payer_name', sa.String(length=255), nullable=False, comment='收(付)方名称'),
    sa.Column('summary', sa.Text(), nullable=True, comment='摘要'),
    sa.Column('transaction_method', sa.String(length=100), nullable=True, comment='交易方式'),
    sa.Column('currency', sa.String(length=20), nullable=True, comment='交易币种'),
    sa.Column('business_type', sa.String(length=100), nullable=True, comment='业务类型'),
    sa.Column('payer_account', sa.String(length=255), nullable=True, comment='收(付)方账号'),
    sa.Column('raw_text', sa.Text(), nullable=True, comment='原始交易行文本'),
    sa.Column('status', sa.Enum('UNMATCHED', 'PARTIALLY_ALLOCATED', 'MATCHED', 'PENDING_CONFIRMATION', 'IGNORED', 'ERROR', name='banktransactionstatus'), server_default='UNMATCHED', nullable=False, comment='匹配状态'),
    sa.Column('allocated_amount', sa.Numeric(precision=12, scale=2), server_default='0', nullable=False, comment='已被分配的金额'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    comment='银行交易流水表'
    )
    with op.batch_alter_table('bank_transactions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bank_transactions_payer_name'), ['payer_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_bank_transactions_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_bank_transactions_transaction_id'), ['transaction_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_bank_transactions_transaction_time'), ['transaction_time'], unique=False)

    op.create_table('monthly_statements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_name', sa.String(length=255), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), server_default='0.00', nullable=False),
    sa.Column('paid_amount', sa.Numeric(precision=10, scale=2), server_default='0.00', nullable=False),
    sa.Column('status', sa.String(length=20), server_default='UNPAID', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('customer_name', 'year', 'month', name='uq_customer_name_year_month'),
    comment='月度结算单，用于聚合客户的月度账单'
    )
    with op.batch_alter_table('monthly_statements', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_monthly_statements_customer_name'), ['customer_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_monthly_statements_month'), ['month'], unique=False)
        batch_op.create_index(batch_op.f('ix_monthly_statements_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_monthly_statements_year'), ['year'], unique=False)

    op.create_table('payer_aliases',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('payer_name', sa.String(length=255), nullable=False, comment='银行流水中的付款人名称'),
    sa.Column('customer_id', sa.UUID(), nullable=False, comment='关联的系统客户ID'),
    sa.Column('notes', sa.Text(), nullable=True, comment='备注'),
    sa.Column('created_by_user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payer_name', 'customer_id', name='uq_payer_name_customer_id'),
    comment='付款人别名表'
    )
    with op.batch_alter_table('payer_aliases', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payer_aliases_customer_id'), ['customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payer_aliases_payer_name'), ['payer_name'], unique=False)

    with op.batch_alter_table('customer_bills', schema=None) as batch_op:
        batch_op.add_column(sa.Column('statement_id', sa.Integer(), nullable=True))
        batch_op.create_index(batch_op.f('ix_customer_bills_statement_id'), ['statement_id'], unique=False)
        batch_op.create_foreign_key(None, 'monthly_statements', ['statement_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('exampapercourse', schema=None) as batch_op:
        batch_op.drop_constraint('exampapercourse_exam_paper_id_fkey2', type_='foreignkey')
        batch_op.drop_constraint('exampapercourse_course_id_fkey2', type_='foreignkey')
        batch_op.create_foreign_key(None, 'exampaper', ['exam_paper_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'trainingcourse', ['course_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('exampapercourse', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('exampapercourse_course_id_fkey2', 'trainingcourse', ['course_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('exampapercourse_exam_paper_id_fkey2', 'exampaper', ['exam_paper_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('customer_bills', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_customer_bills_statement_id'))
        batch_op.drop_column('statement_id')

    with op.batch_alter_table('payer_aliases', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payer_aliases_payer_name'))
        batch_op.drop_index(batch_op.f('ix_payer_aliases_customer_id'))

    op.drop_table('payer_aliases')
    with op.batch_alter_table('monthly_statements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_monthly_statements_year'))
        batch_op.drop_index(batch_op.f('ix_monthly_statements_status'))
        batch_op.drop_index(batch_op.f('ix_monthly_statements_month'))
        batch_op.drop_index(batch_op.f('ix_monthly_statements_customer_name'))

    op.drop_table('monthly_statements')
    with op.batch_alter_table('bank_transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bank_transactions_transaction_time'))
        batch_op.drop_index(batch_op.f('ix_bank_transactions_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_bank_transactions_status'))
        batch_op.drop_index(batch_op.f('ix_bank_transactions_payer_name'))

    op.drop_table('bank_transactions')
    # ### end Alembic commands ###
