"""direct_alembic_autogen_with_env_fallback

Revision ID: fd84876fe9c5
Revises: 5290689398cd
Create Date: 2025-05-13 12:23:14.157447

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fd84876fe9c5'
down_revision = '5290689398cd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('training_content',
    sa.Column('id', sa.UUID(), nullable=False, comment='培训内容唯一标识'),
    sa.Column('course_id', sa.UUID(), nullable=False, comment='所属课程ID'),
    sa.Column('content_name', sa.String(length=255), nullable=False, comment='培训内容名称'),
    sa.Column('original_content', sa.Text(), nullable=False, comment='用户上传的原始培训内容文本'),
    sa.Column('status', sa.String(length=50), nullable=False, comment='处理状态 (pending, oral_processing, tts_refining, llm_refining, splitting, audio_generating, merging, completed, error)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.Column('uploaded_by_user_id', sa.UUID(), nullable=True, comment='上传用户ID'),
    sa.Column('llm_oral_prompt_id', sa.UUID(), nullable=True, comment='口语化处理LLM Prompt ID'),
    sa.Column('llm_refine_prompt_id', sa.UUID(), nullable=True, comment='修订refine脚本LLM Prompt ID'),
    sa.ForeignKeyConstraint(['course_id'], ['trainingcourse.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['llm_oral_prompt_id'], ['llm_prompts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['llm_refine_prompt_id'], ['llm_prompts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    comment='课程培训内容表'
    )
    op.create_index(op.f('ix_training_content_course_id'), 'training_content', ['course_id'], unique=False)
    op.create_index(op.f('ix_training_content_status'), 'training_content', ['status'], unique=False)
    op.create_index(op.f('ix_training_content_uploaded_by_user_id'), 'training_content', ['uploaded_by_user_id'], unique=False)
    op.create_table('tts_script',
    sa.Column('id', sa.UUID(), nullable=False, comment='脚本唯一标识'),
    sa.Column('training_content_id', sa.UUID(), nullable=False, comment='对应的培训内容ID'),
    sa.Column('script_type', sa.String(length=50), nullable=False, comment='脚本类型 (oral_script, tts_refined_script, final_tts_script)'),
    sa.Column('content', sa.Text(), nullable=False, comment='脚本内容'),
    sa.Column('version', sa.Integer(), nullable=False, comment='脚本版本号'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('llm_call_log_id', sa.UUID(), nullable=True, comment='关联的LLM调用日志ID'),
    sa.Column('source_script_id', sa.UUID(), nullable=True, comment='源脚本ID (例如 final_tts_script 的源是 tts_refined_script)'),
    sa.ForeignKeyConstraint(['llm_call_log_id'], ['llm_call_logs.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['source_script_id'], ['tts_script.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['training_content_id'], ['training_content.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('training_content_id', 'script_type', 'version', name='uq_tts_script_content_type_version'),
    comment='TTS脚本表，存储不同处理阶段的脚本'
    )
    op.create_index(op.f('ix_tts_script_script_type'), 'tts_script', ['script_type'], unique=False)
    op.create_index(op.f('ix_tts_script_training_content_id'), 'tts_script', ['training_content_id'], unique=False)
    op.create_table('tts_sentence',
    sa.Column('id', sa.UUID(), nullable=False, comment='句子唯一标识'),
    sa.Column('tts_script_id', sa.UUID(), nullable=False, comment='对应的最终TTS脚本ID'),
    sa.Column('sentence_text', sa.Text(), nullable=False, comment='句子文本'),
    sa.Column('order_index', sa.Integer(), nullable=False, comment='句子在脚本中的顺序'),
    sa.Column('audio_status', sa.String(length=50), nullable=False, comment='语音生成状态 (pending, generating, completed, error)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['tts_script_id'], ['tts_script.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='TTS句子表，存储拆分后的句子及语音状态'
    )
    op.create_index('idx_tts_sentence_script_order', 'tts_sentence', ['tts_script_id', 'order_index'], unique=False)
    op.create_index(op.f('ix_tts_sentence_audio_status'), 'tts_sentence', ['audio_status'], unique=False)
    op.create_index(op.f('ix_tts_sentence_tts_script_id'), 'tts_sentence', ['tts_script_id'], unique=False)
    op.create_table('tts_audio',
    sa.Column('id', sa.UUID(), nullable=False, comment='语音文件唯一标识'),
    sa.Column('tts_sentence_id', sa.UUID(), nullable=True, comment='对应的句子ID (单句语音)'),
    sa.Column('training_content_id', sa.UUID(), nullable=True, comment='对应的培训内容ID (合并语音)'),
    sa.Column('audio_type', sa.String(length=50), nullable=False, comment='语音类型 (sentence_audio, merged_audio)'),
    sa.Column('file_path', sa.String(length=512), nullable=False, comment='语音文件存储路径'),
    sa.Column('duration_ms', sa.Integer(), nullable=True, comment='语音时长 (毫秒)'),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True, comment='文件大小 (字节)'),
    sa.Column('tts_engine', sa.String(length=100), nullable=True, comment='使用的TTS引擎'),
    sa.Column('voice_name', sa.String(length=100), nullable=True, comment='使用的语音名称'),
    sa.Column('generation_params', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='生成语音时使用的参数 (JSONB)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.Column('version', sa.Integer(), nullable=False, comment='语音版本号 (例如，对同一句子重新生成)'),
    sa.Column('is_latest_for_sentence', sa.Boolean(), nullable=True, comment='是否是对应句子的最新版本语音 (用于单句语音)'),
    sa.Column('is_latest_for_content', sa.Boolean(), nullable=True, comment='是否是对应培训内容的最新合并语音 (用于合并语音)'),
    sa.ForeignKeyConstraint(['training_content_id'], ['training_content.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tts_sentence_id'], ['tts_sentence.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    comment='TTS语音文件表'
    )
    op.create_index('idx_tts_audio_content_latest', 'tts_audio', ['training_content_id', 'is_latest_for_content'], unique=False)
    op.create_index('idx_tts_audio_sentence_latest', 'tts_audio', ['tts_sentence_id', 'is_latest_for_sentence'], unique=False)
    op.create_index(op.f('ix_tts_audio_audio_type'), 'tts_audio', ['audio_type'], unique=False)
    op.create_index(op.f('ix_tts_audio_training_content_id'), 'tts_audio', ['training_content_id'], unique=False)
    op.create_index(op.f('ix_tts_audio_tts_sentence_id'), 'tts_audio', ['tts_sentence_id'], unique=False)
    op.alter_column('evaluation', 'evaluated_user_id',
               existing_type=sa.UUID(),
               comment='被评价人ID',
               existing_comment='被评价人ID，外键，关联到user表',
               existing_nullable=False)
    op.alter_column('evaluation', 'evaluator_user_id',
               existing_type=sa.UUID(),
               comment='评价人ID (内部用户)',
               existing_comment='评价人ID，外键，关联到user表',
               existing_nullable=True)
    op.alter_column('evaluation', 'evaluator_customer_id',
               existing_type=sa.UUID(),
               comment='评价人ID (客户)',
               existing_comment='评价人ID (客户)，外键，关联到 customer 表',
               existing_nullable=True)
    op.alter_column('evaluation_aspect', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('evaluation_category', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('evaluation_category', 'allow_manual_input',
               existing_type=sa.BOOLEAN(),
               comment='是否允许对该类别进行手动文字输入',
               existing_comment='是否允许对该类别进行手动文字输入 (TRUE: 允许, FALSE: 不允许)',
               existing_nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('evaluation_detail', 'score',
               existing_type=sa.INTEGER(),
               comment='评价分数',
               existing_comment='评价分数 (30, 20, 或 10)',
               existing_nullable=True)
    op.alter_column('evaluation_item', 'is_visible_to_client',
               existing_type=sa.BOOLEAN(),
               comment='是否展示给客户',
               existing_comment='是否展示给客户 (TRUE: 展示, FALSE: 不展示)',
               existing_nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('evaluation_item', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    # op.add_column('evaluation_manual_input', sa.Column('id', sa.UUID(), nullable=False, comment='手动输入记录ID'))
    # op.create_index(op.f('ix_evaluation_manual_input_category_id'), 'evaluation_manual_input', ['category_id'], unique=False)
    # op.create_index(op.f('ix_evaluation_manual_input_evaluation_id'), 'evaluation_manual_input', ['evaluation_id'], unique=False)
    # op.create_unique_constraint('uq_evaluation_manual_input_eval_cat', 'evaluation_manual_input', ['evaluation_id', 'category_id'])
    # op.create_table_comment(
    #     'evaluation_manual_input',
    #     '评价手动输入表',
    #     existing_comment=None,
    #     schema=Nonecreate_unique_constraint
    # )
    op.drop_constraint('exampapercourse_course_id_fkey', 'exampapercourse', type_='foreignkey')
    op.drop_constraint('exampapercourse_exam_paper_id_fkey', 'exampapercourse', type_='foreignkey')
    op.create_foreign_key(None, 'exampapercourse', 'trainingcourse', ['course_id'], ['id'], source_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'exampapercourse', 'exampaper', ['exam_paper_id'], ['id'], source_schema='public', ondelete='CASCADE')
    op.alter_column('option', 'is_correct',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_comment='是否为正确答案',
               existing_server_default=sa.text('false'))
    op.execute("UPDATE \"user\" SET email = NULL WHERE email = ''")
    print("DEBUG: Updated empty email strings to NULL in user table.")
    op.create_unique_constraint('uq_user_email', 'user', ['email'])

    # --- !! 修改针对 evaluation_manual_input 表的操作 !! ---
    print("DEBUG: Applying changes to evaluation_manual_input table.")

    # 步骤 1: 添加 id 列，允许为空，并设置 server_default (对新行有效)
    op.add_column('evaluation_manual_input', 
                  sa.Column('id', postgresql.UUID(as_uuid=True), 
                            nullable=True,  # 先允许为空
                            server_default=sa.text('gen_random_uuid()'), # 对后续 INSERT 有用
                            comment='手动输入记录ID')
    )
    print("DEBUG: Added nullable id column to evaluation_manual_input.")

    # 步骤 2: 为现有行的 id 列填充 UUID 值
    op.execute('UPDATE evaluation_manual_input SET id = gen_random_uuid() WHERE id IS NULL')
    print("DEBUG: Populated id column for existing rows in evaluation_manual_input.")

    # 步骤 3: 将 id 列修改为 NOT NULL
    op.alter_column('evaluation_manual_input', 'id', nullable=False)
    print("DEBUG: Altered id column in evaluation_manual_input to NOT NULL.")

    # 步骤 4: 将新的 id 列设置为主键。
    # 首先，我们需要知道旧的主键是什么。从您的 \d 输出看，该表目前没有显式的主键。
    # 但是，如果 (evaluation_id, category_id) 组合应该是唯一的（如模型所示），
    # 并且之前可能是隐式主键或唯一约束，我们需要确保操作的正确性。
    # 您的模型定义中，id 是主键，(evaluation_id, category_id) 是唯一约束。
    # 所以，我们这里主要是创建基于 id 的主键。
    # Alembic 生成的脚本中，如果它检测到模型中的 id 是主键，它可能会尝试添加主键约束。
    # 我们需要确保这个操作在列被填充并设为 NOT NULL 之后。
    
    # 由于您的模型将 id 设为 primary_key=True，Alembic 应该会自动尝试创建基于 id 的主键。
    # 如果之前 (evaluation_id, category_id) 构成了主键，并且名为 'evaluation_manual_input_pkey'，
    # 那么在添加新的基于 'id' 的主键前，旧的需要被移除。
    # 但根据您的 \d 输出，没有显示显式的主键。
    # 所以，我们直接创建基于 id 的主键。
    # Alembic 在脚本中通常不会包含 op.create_primary_key，因为它会通过模型推断。
    # 但如果 autogenerate 没有生成它，而我们需要它，可以手动添加。
    # 然而，考虑到您的模型将id设为primary_key=True，Alembic的add_column通常会处理好。
    # 如果在upgrade时关于主键仍有问题，我们再调整。
    # 当前脚本中，Alembic 已经为 evaluation_manual_input 生成了以下操作（除了 add_column id）：
    # op.create_index(op.f('ix_evaluation_manual_input_category_id'), 'evaluation_manual_input', ['category_id'], unique=False)
    # op.create_index(op.f('ix_evaluation_manual_input_evaluation_id'), 'evaluation_manual_input', ['evaluation_id'], unique=False)
    # op.create_unique_constraint('uq_evaluation_manual_input_eval_cat', 'evaluation_manual_input', ['evaluation_id', 'category_id'])
    # op.create_table_comment(...)
    # 这意味着 Alembic 期望 id 成为主键。我们确保了 id 列的创建和填充。

    # 保持 Alembic 生成的其他针对 evaluation_manual_input 的操作（索引、唯一约束、注释）
    # 这些操作应该在 id 列相关操作之后，或者可以并行执行（索引和注释）
    # 唯一约束的创建是独立的。

    # 确保 Alembic 生成的这些命令在正确的位置，如果它们依赖 id 列作为主键，则应在主键创建后
    # 但从您提供的脚本看，这些是独立的。
    # 所以，保持Alembic生成的这些命令不变：
    op.create_index(op.f('ix_evaluation_manual_input_category_id'), 'evaluation_manual_input', ['category_id'], unique=False)
    op.create_index(op.f('ix_evaluation_manual_input_evaluation_id'), 'evaluation_manual_input', ['evaluation_id'], unique=False)
    op.create_unique_constraint(op.f('uq_evaluation_manual_input_eval_cat'), 'evaluation_manual_input', ['evaluation_id', 'category_id'])
    op.create_table_comment(
        'evaluation_manual_input',
        '评价手动输入表',
        existing_comment=None, # 或者您数据库中实际的旧注释
        schema=None
    )
    print("DEBUG: Applied other Alembic-generated changes to evaluation_manual_input.")

    # --- !! 修改针对 evaluation_manual_input 表的操作结束 !! ---


    # ... (保持 Alembic 生成的对 exampapercourse 和 option 表的操作) ...
    op.drop_constraint('exampapercourse_course_id_fkey', 'exampapercourse', type_='foreignkey')
    op.drop_constraint('exampapercourse_exam_paper_id_fkey', 'exampapercourse', type_='foreignkey')
    op.create_foreign_key(None, 'exampapercourse', 'trainingcourse', ['course_id'], ['id'], source_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'exampapercourse', 'exampaper', ['exam_paper_id'], ['id'], source_schema='public', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_user_email', 'user', type_='unique')
    op.alter_column('option', 'is_correct',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_comment='是否为正确答案',
               existing_server_default=sa.text('false'))
    op.drop_constraint(None, 'exampapercourse', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'exampapercourse', schema='public', type_='foreignkey')
    op.create_foreign_key('exampapercourse_exam_paper_id_fkey', 'exampapercourse', 'exampaper', ['exam_paper_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('exampapercourse_course_id_fkey', 'exampapercourse', 'trainingcourse', ['course_id'], ['id'], ondelete='CASCADE')
    # --- !! 还原针对 evaluation_manual_input 表的操作 !! ---
    print("DEBUG: Downgrading changes for evaluation_manual_input table.")
    op.drop_table_comment(
        'evaluation_manual_input',
        existing_comment='评价手动输入表', # 确保与 upgrade 中的注释一致
        schema=None
    )
    op.drop_column('evaluation_manual_input', 'id')

    op.drop_constraint(op.f('uq_evaluation_manual_input_eval_cat'), 'evaluation_manual_input', type_='unique')
    op.drop_index(op.f('ix_evaluation_manual_input_evaluation_id'), table_name='evaluation_manual_input')
    op.drop_index(op.f('ix_evaluation_manual_input_category_id'), table_name='evaluation_manual_input')
    op.drop_constraint('uq_evaluation_manual_input_eval_cat', 'evaluation_manual_input', type_='unique')
    op.drop_index(op.f('ix_evaluation_manual_input_evaluation_id'), table_name='evaluation_manual_input')
    op.drop_index(op.f('ix_evaluation_manual_input_category_id'), table_name='evaluation_manual_input')
    op.drop_column('evaluation_manual_input', 'id')
    op.alter_column('evaluation_item', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('evaluation_item', 'is_visible_to_client',
               existing_type=sa.BOOLEAN(),
               comment='是否展示给客户 (TRUE: 展示, FALSE: 不展示)',
               existing_comment='是否展示给客户',
               existing_nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('evaluation_detail', 'score',
               existing_type=sa.INTEGER(),
               comment='评价分数 (30, 20, 或 10)',
               existing_comment='评价分数',
               existing_nullable=True)
    op.alter_column('evaluation_category', 'allow_manual_input',
               existing_type=sa.BOOLEAN(),
               comment='是否允许对该类别进行手动文字输入 (TRUE: 允许, FALSE: 不允许)',
               existing_comment='是否允许对该类别进行手动文字输入',
               existing_nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('evaluation_category', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('evaluation_aspect', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('evaluation', 'evaluator_customer_id',
               existing_type=sa.UUID(),
               comment='评价人ID (客户)，外键，关联到 customer 表',
               existing_comment='评价人ID (客户)',
               existing_nullable=True)
    op.alter_column('evaluation', 'evaluator_user_id',
               existing_type=sa.UUID(),
               comment='评价人ID，外键，关联到user表',
               existing_comment='评价人ID (内部用户)',
               existing_nullable=True)
    op.alter_column('evaluation', 'evaluated_user_id',
               existing_type=sa.UUID(),
               comment='被评价人ID，外键，关联到user表',
               existing_comment='被评价人ID',
               existing_nullable=False)
    op.drop_index(op.f('ix_tts_audio_tts_sentence_id'), table_name='tts_audio')
    op.drop_index(op.f('ix_tts_audio_training_content_id'), table_name='tts_audio')
    op.drop_index(op.f('ix_tts_audio_audio_type'), table_name='tts_audio')
    op.drop_index('idx_tts_audio_sentence_latest', table_name='tts_audio')
    op.drop_index('idx_tts_audio_content_latest', table_name='tts_audio')
    op.drop_table('tts_audio')
    op.drop_index(op.f('ix_tts_sentence_tts_script_id'), table_name='tts_sentence')
    op.drop_index(op.f('ix_tts_sentence_audio_status'), table_name='tts_sentence')
    op.drop_index('idx_tts_sentence_script_order', table_name='tts_sentence')
    op.drop_table('tts_sentence')
    op.drop_index(op.f('ix_tts_script_training_content_id'), table_name='tts_script')
    op.drop_index(op.f('ix_tts_script_script_type'), table_name='tts_script')
    op.drop_table('tts_script')
    op.drop_index(op.f('ix_training_content_uploaded_by_user_id'), table_name='training_content')
    op.drop_index(op.f('ix_training_content_status'), table_name='training_content')
    op.drop_index(op.f('ix_training_content_course_id'), table_name='training_content')
    op.drop_table('training_content')
    
    
    
